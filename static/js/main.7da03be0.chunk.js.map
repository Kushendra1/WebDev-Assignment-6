{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["SearchAPI","props","handleChange","event","setState","pokemon","target","value","handleSearchClick","a","state","apiData","error","lastElement","document","getElementById","removeChild","pokemonName","toLowerCase","linkToAPI","axios","get","response","console","log","data","found","status","para","createElement","id","innerHTML","appendChild","generateData","pokemonData","foundResults","typesData","types","table","name","height","weight","experience","base_experience","species","sprites","other","dream_world","front_default","abilities","type","length","i","typeFill","push","abilitiesFill","ability","img","undefined","this","exception","className","src","width","onChange","placeholder","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7da03be0.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nclass SearchAPI extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      apiData: [],\n      pokemon: \"\",\n      found: false,\n        error:\"\"\n    }\n  }\n\n  handleChange = (event) => {\n      this.setState({pokemon: event.target.value});\n  }\n\n  handleSearchClick = async () => {\n      this.state.apiData=[];\n    if(this.state.error!==\"\") {\n        var lastElement = document.getElementById('P');\n        document.getElementById(\"results\").removeChild(lastElement)\n        this.state.error=\"\";\n    }\n    let pokemonName = this.state.pokemon.toLowerCase();\n    let linkToAPI = 'https://pokeapi.co/api/v2/pokemon/' + pokemonName;\n\n    try{\n      let response = await axios.get(linkToAPI);\n      console.log(response.data);\n      this.setState({apiData: response.data, found: true});\n    }\n    catch (err){\n      if(err.response){\n        console.log(err.response.data);\n        console.log(err.response.status);\n        this.setState({found: false});\n          this.setState({error: err.response.data});\n\n          var para = document.createElement('P');\n          para.id = 'P'\n          para.innerHTML = 'Ooooppps ... character \"' + this.state.pokemon + '\" does not exist yet. Try sending it as ' +\n              'a recommendation to the pokemon creators!';\n          return document.getElementById(\"results\").appendChild(para);\n      }\n    }\n  }\n\n  generateData = () =>{\n    let pokemonData = this.state.apiData;\n    let foundResults = this.state.found;\n    let typesData = [pokemonData.types];\n    console.log(typesData);\n    let table = [];\n\n    if(!foundResults){\n      <p>No results.</p>\n    }\n    else{\n      let name = pokemonData.name;\n      let height = pokemonData.height;\n      let weight = pokemonData.weight;\n      let experience = pokemonData.base_experience;\n      let species = pokemonData.species.name;\n      let sprites = pokemonData.sprites.other.dream_world.front_default;\n      console.log(sprites);\n      let abilities = [];\n      let type = [];\n      if(pokemonData.types.length > 1){\n        for(let i = 0; i < pokemonData.types.length; i++){\n          let typeFill = pokemonData.types[i].type.name;\n          type.push(\n            typeFill\n          )\n          type.push(\n            \" \"\n          )\n        }\n      }\n      else{\n        let typeFill = pokemonData.types[0].type.name;\n        type.push(\n          typeFill\n        )\n      }\n      \n      if(pokemonData.abilities.length > 1){\n        for (let i = 0; i < pokemonData.abilities.length; i++){\n          let abilitiesFill = pokemonData.abilities[i].ability.name;\n          abilities.push(\n            abilitiesFill\n          )\n          abilities.push(\n            \" \"\n          )\n        }\n      }\n      else{\n        let abilitiesFill = pokemonData.abilities[0].ability.name;\n        abilities.push(\n          abilitiesFill\n        )\n      }\n      \n\n      table.push(\n        <tr key = {pokemonData.id}>\n          <tr>\n            <div id=\"tableHeader\"> Information about {name}: </div>\n              <br/>\n          </tr>\n            <tr>\n                <td>\n              <th>Name: </th>\n              <th><strong>{name}</strong></th>\n                </td>\n            </tr>\n            <tr>\n              <td>\n                <th>Height: </th>\n                <th>{height}</th>\n              </td>\n            </tr>\n            <tr>\n                <td>\n                <th>Weight: </th>\n                <th>{weight}</th>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                <th>Experience: </th>\n                <th>{experience}</th>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                <th>Type: </th>\n                <th>{type}</th>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                <th>Species: </th>\n                <th>{species}</th>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                <th>Abilities: </th>\n                <th>{abilities}</th>\n                </td>\n            </tr>\n        </tr>\n\n\n    );\n      return table;\n    }\n  }\n\n  render(){\n    let img ='';\n    try{\n      if(this.state.apiData.sprites.other.dream_world.front_default!==undefined){\n        img =this.state.apiData.sprites.other.dream_world.front_default\n      }}catch(exception){\n      img='';\n    }\n    return (\n      <div className = 'container'>\n        <div className = 'search'>\n            <div id='pic'>\n                <img src={img} width=\"350\" height=\"400\"></img>\n            </div>\n          <h3>Pokemon Search</h3>\n          <input type=\"text\" value={this.state.pokemon} onChange = {this.handleChange} placeholder = 'Enter Pokemon Name!'></input>\n          <button className=\"search-button\" onClick={this.handleSearchClick}><span> I Choose You! </span></button>\n        </div>\n        <h4>{this.state.pokemon.name}</h4>\n        <table id = \"results\">\n          <tbody>\n          {this.generateData()}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default SearchAPI;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}